/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package organizer;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.Time;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Locale;
import javax.swing.JOptionPane;

import organizer.TableFromDatabase;

/**
 *
 * @author kuba_66
 */
public final class GUI extends javax.swing.JFrame {
    
        Connection con;
        Statement stmt_p,stmt_w,stmt_n,stmt_d,stmt_s,stmt_g, stmt_t, stmt_pl, stmt_pom1, stmt_z;
        ResultSet rs_p, rs_w,rs_n, rs_d,rs_s,rs_g,rs_t, rs_pl, rs_pom1, rs_z;
        int current_row = 0;
       
    /**
     * Creates new form GUI
     */
    public GUI() {
        
        initComponents();
        TableFromDatabase plan1 = new TableFromDatabase(sPlan1,0);
        TableFromDatabase plan2 = new TableFromDatabase(sPlan2,1);
        TableFromDatabase plan3 = new TableFromDatabase(sPlan3,2);
        TableFromDatabase plan4 = new TableFromDatabase(sPlan4,3);
        TableFromDatabase plan5 = new TableFromDatabase(sPlan5,4);
        
        polacz();
        update();
        
    }
    
    public void polacz() {
                try{
            //Połączenie z bazą danych
        String host = "jdbc:derby://localhost:1527/organizer";
        String uzytkownik = "org";
        String haslo = "org";
        con = DriverManager.getConnection(host, uzytkownik, haslo);
         
        //Wykonanie wyrażenia SQL i załadowanie rekordów
        stmt_p = con.createStatement( ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE );
        stmt_w = con.createStatement( ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE );
        stmt_n = con.createStatement( ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE );
        stmt_d = con.createStatement( ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE );
        stmt_s = con.createStatement( ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE );
        stmt_g = con.createStatement( ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE );
        stmt_t = con.createStatement( ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE );
        stmt_pl = con.createStatement( ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE );
        stmt_pom1 = con.createStatement( ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE );
        stmt_z = con.createStatement( ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE );
        String sql = "SELECT * FROM PRZEDMIOTY";
        String sql_pl = "select p.NAZWA as NAZWA , g.GODZINA_OD, g.GODZINA_DO, t.NAZWA as Typ, n.IMIE, n.NAZWISKO, z.SALA, z.DZIEN\n" +
                        "FROM ZAJĘCIA z JOIN PRZEDMIOTY p Using(ID_PRZEDMIOTU)\n" +
                        "JOIN GODZINY g USING(ID_GODZINY)\n" +
                        "JOIN TYPY_ZAJEC t USING(ID_TYPU)\n" +
                        "JOIN NAUCZYCIELE n USING (ID_NAUCZYCIELA)";
        //rs = stmt.executeQuery(sql);
        rs_p = stmt_p.executeQuery("SELECT * FROM PRZEDMIOTY");
        rs_w = stmt_w.executeQuery("SELECT * FROM WYDARZENIA");
        rs_n = stmt_n.executeQuery("SELECT * FROM NAUCZYCIELE");
        rs_d = stmt_d.executeQuery("SELECT * FROM DYZURY");
        rs_s = stmt_s.executeQuery("SELECT * FROM SEMESTR");
        rs_g = stmt_g.executeQuery("SELECT * FROM GODZINY");
        rs_t = stmt_t.executeQuery("SELECT * FROM TYPY_ZAJEC");
        rs_pl = stmt_pl.executeQuery(sql_pl);
        rs_pom1 = stmt_pom1.executeQuery("SELECT * FROM NAUCZYCIELE");
        rs_z  = stmt_z.executeQuery("SELECT * FROM ZAJĘCIA");
        
        {
        int i = 0;
        while(rs_pl.next()) i++;
        lZajecia2.setText("/"+Integer.toString(i));
        while(rs_pl.previous());
        }
            
                }
            catch(SQLException err){System.out.println(err.getMessage());}
           }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        fMain = new javax.swing.JTabbedPane();
        fStart = new javax.swing.JInternalFrame();
        fPlan = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        tPlan = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        fPrzedmioty = new javax.swing.JInternalFrame();
        l1 = new javax.swing.JLabel();
        bNext = new javax.swing.JButton();
        bPrev = new javax.swing.JButton();
        l2 = new javax.swing.JLabel();
        cbNauczyciele = new javax.swing.JComboBox();
        l6 = new javax.swing.JLabel();
        tfSala = new javax.swing.JTextField();
        l4 = new javax.swing.JLabel();
        dzien_plan1 = new javax.swing.JComboBox();
        l5 = new javax.swing.JLabel();
        cbGodziny = new javax.swing.JComboBox();
        l3 = new javax.swing.JLabel();
        cbTyp = new javax.swing.JComboBox();
        l7 = new javax.swing.JLabel();
        cbSemestry = new javax.swing.JComboBox();
        cbPrzedmioty = new javax.swing.JComboBox();
        bNowyPrzedmiot = new javax.swing.JButton();
        bZapiszPrzedmiot = new javax.swing.JButton();
        bAnulujPrzedmiot = new javax.swing.JButton();
        tfNazwaPrzedmiotu = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        cbPrzedmioty2 = new javax.swing.JComboBox();
        bDodajZajecia = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        bZapiszZajecia = new javax.swing.JButton();
        bAnulujZajecia = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tfZajecia = new javax.swing.JTextArea();
        jSeparator2 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        lZajecia1 = new javax.swing.JLabel();
        lZajecia2 = new javax.swing.JLabel();
        fWydarzenia = new javax.swing.JInternalFrame();
        jLabel3 = new javax.swing.JLabel();
        typ_wydarzen = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        miejsce_wydarzenia = new javax.swing.JTextField();
        dodaj_wyd = new javax.swing.JButton();
        zapisz_wyd = new javax.swing.JButton();
        anuluj_wyd = new javax.swing.JButton();
        pier_wyd = new javax.swing.JButton();
        pop_wyd = new javax.swing.JToggleButton();
        nast_wyd = new javax.swing.JToggleButton();
        ost_wyd = new javax.swing.JButton();
        lista_wyd = new javax.swing.JTextField();
        usun_wyd = new javax.swing.JButton();
        zmien_wyd = new javax.swing.JButton();
        godziny_wyd = new javax.swing.JComboBox();
        minuty_wyd = new javax.swing.JComboBox();
        rok_wyd = new javax.swing.JComboBox();
        dzien_wyd = new javax.swing.JComboBox();
        miesiac_wyd = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        inny_typ = new javax.swing.JTextField();
        fNauczyciele = new javax.swing.JInternalFrame();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        imie = new javax.swing.JTextField();
        nazwisko = new javax.swing.JTextField();
        sala = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        Zapisz_N = new javax.swing.JButton();
        Anuluj_N = new javax.swing.JButton();
        First_dyz = new javax.swing.JButton();
        Previous_dyz = new javax.swing.JButton();
        Next_dyz = new javax.swing.JButton();
        Last_dyz = new javax.swing.JButton();
        lista_dyz = new javax.swing.JTextField();
        Delete = new javax.swing.JButton();
        BoxTak = new javax.swing.JRadioButton();
        BoxNie = new javax.swing.JRadioButton();
        lista_n = new javax.swing.JComboBox();
        aktualizuj_dyz = new javax.swing.JButton();
        godziny_dyz_od_h = new javax.swing.JComboBox();
        godziny_dyz_od_m = new javax.swing.JComboBox();
        godziny_dyz_do_m = new javax.swing.JComboBox();
        godziny_dyz_do_h = new javax.swing.JComboBox();
        dzien_dyz = new javax.swing.JComboBox();
        fSemstr = new javax.swing.JInternalFrame();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        semestr = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        rok_s1 = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        rok_s2 = new javax.swing.JComboBox();
        Zapisz_sem = new javax.swing.JButton();
        fTest = new javax.swing.JInternalFrame();
        sPlan2 = new javax.swing.JScrollPane();
        sPlan3 = new javax.swing.JScrollPane();
        sPlan4 = new javax.swing.JScrollPane();
        sPlan1 = new javax.swing.JScrollPane();
        sPlan5 = new javax.swing.JScrollPane();
        sPlan0 = new javax.swing.JScrollPane();
        tGodz = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        fMain.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        fStart.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        fStart.setTitle("Start");
        fStart.setToolTipText("");
        fStart.setVisible(true);

        javax.swing.GroupLayout fStartLayout = new javax.swing.GroupLayout(fStart.getContentPane());
        fStart.getContentPane().setLayout(fStartLayout);
        fStartLayout.setHorizontalGroup(
            fStartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 870, Short.MAX_VALUE)
        );
        fStartLayout.setVerticalGroup(
            fStartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 437, Short.MAX_VALUE)
        );

        fMain.addTab("Start", fStart);

        fPlan.setBorder(null);
        fPlan.setVisible(true);

        tPlan.setBackground(new java.awt.Color(255, 255, 204));
        tPlan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"08.00-10.00", null, null, null, null, null, null, null},
                {"10.00-12.00", null, null, null, null, null, null, null},
                {"12.00-14.00", null, null, null, null, null, null, null},
                {"14.00-16.00", null, null, null, null, null, null, null},
                {"16.00-18.00", null, null, null, null, null, null, null},
                {"18.00-20.00", null, null, null, null, null, null, null}
            },
            new String [] {
                "Godziny", "Poniedziałek", "Wtorek", "Środa", "Czwartek", "Piątek", "Sobota", "Niedziela"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tPlan.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(tPlan);
        try
        {
            for (int row = 0; row < tPlan.getRowCount(); row++)
            {
                int rowHeight = tPlan.getRowHeight();

                for (int column = 0; column < tPlan.getColumnCount(); column++)
                {
                    Component comp = tPlan.prepareRenderer(tPlan.getCellRenderer(row, column), row, column);
                    rowHeight = 55;
                }

                tPlan.setRowHeight(row, rowHeight);

            }
            tPlan.setShowHorizontalLines(true);
            tPlan.setShowVerticalLines(true);
            tPlan.setGridColor(Color.orange);
        }
        catch(ClassCastException e) {}

        jButton2.setText("Test planu");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout fPlanLayout = new javax.swing.GroupLayout(fPlan.getContentPane());
        fPlan.getContentPane().setLayout(fPlanLayout);
        fPlanLayout.setHorizontalGroup(
            fPlanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 872, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fPlanLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );
        fPlanLayout.setVerticalGroup(
            fPlanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fPlanLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );

        fMain.addTab("Plan Zajęć", fPlan);

        fPrzedmioty.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        fPrzedmioty.setTitle("Przedmioty i zajęcia");
        fPrzedmioty.setVisible(true);

        l1.setText("Przedmiot:");
        l1.setEnabled(false);

        bNext.setText("Następny >>");
        bNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNextActionPerformed(evt);
            }
        });

        bPrev.setText("<< Poprzedni");
        bPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPrevActionPerformed(evt);
            }
        });

        l2.setText("Nauczyciel: ");
        l2.setEnabled(false);

        cbNauczyciele.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Kliknij \"Aktualizuj\"" }));
        cbNauczyciele.setEnabled(false);
        cbNauczyciele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNauczycieleActionPerformed(evt);
            }
        });

        l6.setText("Sala:");
        l6.setEnabled(false);

        tfSala.setEnabled(false);
        tfSala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSalaActionPerformed(evt);
            }
        });

        l4.setText("Dzień:");
        l4.setEnabled(false);

        dzien_plan1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Poniedziałek", "Wtorek", "Środa", "Czwartek", "Piątek", "Sobota", "Niedziela" }));
        dzien_plan1.setEnabled(false);

        l5.setText("Godzina:");
        l5.setEnabled(false);

        cbGodziny.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Kliknij \"Aktualizuj\"" }));
        cbGodziny.setEnabled(false);
        cbGodziny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbGodzinyActionPerformed(evt);
            }
        });

        l3.setText("Typ:");
        l3.setEnabled(false);

        cbTyp.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Kliknij \"Aktualizuj\"" }));
        cbTyp.setEnabled(false);

        l7.setText("Semestr:");
        l7.setEnabled(false);

        cbSemestry.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Kliknij \"Aktualizuj\"" }));
        cbSemestry.setEnabled(false);

        cbPrzedmioty.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Przedmioty" }));
        cbPrzedmioty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPrzedmiotyActionPerformed(evt);
            }
        });

        bNowyPrzedmiot.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bNowyPrzedmiot.setIcon(new javax.swing.ImageIcon(getClass().getResource("/organizer/icon_add_small.png"))); // NOI18N
        bNowyPrzedmiot.setText("Nowy");
        bNowyPrzedmiot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNowyPrzedmiotActionPerformed(evt);
            }
        });

        bZapiszPrzedmiot.setBackground(new java.awt.Color(255, 255, 255));
        bZapiszPrzedmiot.setIcon(new javax.swing.ImageIcon(getClass().getResource("/organizer/icon_yes_small.png"))); // NOI18N
        bZapiszPrzedmiot.setText("Zapisz");
        bZapiszPrzedmiot.setEnabled(false);
        bZapiszPrzedmiot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bZapiszPrzedmiotActionPerformed(evt);
            }
        });

        bAnulujPrzedmiot.setBackground(new java.awt.Color(255, 255, 255));
        bAnulujPrzedmiot.setIcon(new javax.swing.ImageIcon(getClass().getResource("/organizer/icon_no_small.png"))); // NOI18N
        bAnulujPrzedmiot.setText("Anuluj");
        bAnulujPrzedmiot.setEnabled(false);
        bAnulujPrzedmiot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAnulujPrzedmiotActionPerformed(evt);
            }
        });

        tfNazwaPrzedmiotu.setEnabled(false);
        tfNazwaPrzedmiotu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNazwaPrzedmiotuActionPerformed(evt);
            }
        });

        jLabel30.setText("Lista przedmiotów:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Przedmioty");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel20.setText("Nowe zajęcia");

        cbPrzedmioty2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Przedmioty" }));
        cbPrzedmioty2.setEnabled(false);

        bDodajZajecia.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bDodajZajecia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/organizer/icon_add_small.png"))); // NOI18N
        bDodajZajecia.setText("Dodaj");
        bDodajZajecia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDodajZajeciaActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel21.setText("Zajęcia:");

        bZapiszZajecia.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bZapiszZajecia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/organizer/icon_yes_small.png"))); // NOI18N
        bZapiszZajecia.setText("Zapisz");
        bZapiszZajecia.setEnabled(false);
        bZapiszZajecia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bZapiszZajeciaActionPerformed(evt);
            }
        });

        bAnulujZajecia.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bAnulujZajecia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/organizer/icon_no_small.png"))); // NOI18N
        bAnulujZajecia.setText("Anuluj");
        bAnulujZajecia.setEnabled(false);
        bAnulujZajecia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAnulujZajeciaActionPerformed(evt);
            }
        });

        tfZajecia.setColumns(20);
        tfZajecia.setRows(5);
        jScrollPane2.setViewportView(tfZajecia);
        Font font = tfZajecia.getFont();
        float size = font.getSize() + 3.0f;
        tfZajecia.setFont(font.deriveFont(size));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/organizer/icon_no_small.png"))); // NOI18N
        jButton1.setText("Usuń");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lZajecia1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lZajecia1.setText("0");

        lZajecia2.setText("/10");

        javax.swing.GroupLayout fPrzedmiotyLayout = new javax.swing.GroupLayout(fPrzedmioty.getContentPane());
        fPrzedmioty.getContentPane().setLayout(fPrzedmiotyLayout);
        fPrzedmiotyLayout.setHorizontalGroup(
            fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fPrzedmiotyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(fPrzedmiotyLayout.createSequentialGroup()
                        .addGroup(fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(fPrzedmiotyLayout.createSequentialGroup()
                                .addComponent(jLabel30)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbPrzedmioty, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(fPrzedmiotyLayout.createSequentialGroup()
                                .addComponent(bNowyPrzedmiot)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfNazwaPrzedmiotu, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(fPrzedmiotyLayout.createSequentialGroup()
                                .addComponent(bZapiszPrzedmiot)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bAnulujPrzedmiot))
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(fPrzedmiotyLayout.createSequentialGroup()
                        .addGroup(fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(fPrzedmiotyLayout.createSequentialGroup()
                                .addGroup(fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(l2)
                                    .addComponent(jLabel20))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(fPrzedmiotyLayout.createSequentialGroup()
                                        .addComponent(bDodajZajecia)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bZapiszZajecia)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bAnulujZajecia))
                                    .addGroup(fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cbNauczyciele, 0, 417, Short.MAX_VALUE)
                                        .addComponent(cbTyp, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cbPrzedmioty2, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(fPrzedmiotyLayout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(l3))
                            .addGroup(fPrzedmiotyLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(l4)
                                    .addComponent(l5)
                                    .addComponent(l6)
                                    .addComponent(l7))
                                .addGap(55, 55, 55)
                                .addGroup(fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbGodziny, 0, 417, Short.MAX_VALUE)
                                    .addComponent(dzien_plan1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbSemestry, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tfSala))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(fPrzedmiotyLayout.createSequentialGroup()
                                .addComponent(bPrev)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bNext)
                                .addGap(7, 7, 7))
                            .addGroup(fPrzedmiotyLayout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lZajecia1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lZajecia2)))))
                .addContainerGap())
        );
        fPrzedmiotyLayout.setVerticalGroup(
            fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fPrzedmiotyLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(2, 2, 2)
                .addGroup(fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(cbPrzedmioty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfNazwaPrzedmiotu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bNowyPrzedmiot))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bZapiszPrzedmiot)
                    .addComponent(bAnulujPrzedmiot))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fPrzedmiotyLayout.createSequentialGroup()
                        .addGroup(fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(fPrzedmiotyLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel21)
                                    .addComponent(lZajecia1)
                                    .addComponent(lZajecia2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(fPrzedmiotyLayout.createSequentialGroup()
                                        .addGap(137, 137, 137)
                                        .addGroup(fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(bPrev)
                                            .addComponent(jButton1)
                                            .addComponent(bNext)))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(fPrzedmiotyLayout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel20)
                                    .addComponent(bDodajZajecia)
                                    .addComponent(bZapiszZajecia)
                                    .addComponent(bAnulujZajecia))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbPrzedmioty2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(l2)
                                    .addComponent(cbNauczyciele, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(l3)
                                    .addComponent(cbTyp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(dzien_plan1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(l4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(l5)
                                    .addGroup(fPrzedmiotyLayout.createSequentialGroup()
                                        .addComponent(cbGodziny, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(tfSala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(l6))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(fPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cbSemestry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(l7))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fPrzedmiotyLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        fMain.addTab("Przedmioty", fPrzedmioty);

        fWydarzenia.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        fWydarzenia.setTitle("Wydarzenia");
        fWydarzenia.setVisible(true);

        jLabel3.setText("Typ wydarzenia:");
        jLabel3.setEnabled(false);

        typ_wydarzen.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "kolokwium", "projekt", "poprawa", "inne" }));
        typ_wydarzen.setToolTipText("");
        typ_wydarzen.setEnabled(false);
        typ_wydarzen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typ_wydarzenActionPerformed(evt);
            }
        });

        jLabel4.setText("Data wydarzenia");
        jLabel4.setEnabled(false);

        jLabel5.setText("Czas wydarzenia");
        jLabel5.setEnabled(false);

        jLabel6.setText("Miejsce wydarzenia");
        jLabel6.setEnabled(false);

        miejsce_wydarzenia.setEnabled(false);

        dodaj_wyd.setText("Dodaj");
        dodaj_wyd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dodaj_wydActionPerformed(evt);
            }
        });

        zapisz_wyd.setText("Zapisz");
        zapisz_wyd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zapisz_wydActionPerformed(evt);
            }
        });

        anuluj_wyd.setText("Anuluj");
        anuluj_wyd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anuluj_wydActionPerformed(evt);
            }
        });

        pier_wyd.setText("|< Pierwszy");
        pier_wyd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pier_wydActionPerformed(evt);
            }
        });

        pop_wyd.setText("<< Poprzedni");
        pop_wyd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pop_wydActionPerformed(evt);
            }
        });

        nast_wyd.setText("Następny >>");
        nast_wyd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nast_wydActionPerformed(evt);
            }
        });

        ost_wyd.setText("Ostatni >|");
        ost_wyd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ost_wydActionPerformed(evt);
            }
        });

        usun_wyd.setText("Usuń");
        usun_wyd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usun_wydActionPerformed(evt);
            }
        });

        zmien_wyd.setText("Zmień");

        godziny_wyd.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));
        godziny_wyd.setEnabled(false);
        godziny_wyd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                godziny_wydActionPerformed(evt);
            }
        });

        minuty_wyd.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", " " }));
        minuty_wyd.setEnabled(false);

        rok_wyd.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1900", "1901", "1902", "1903", "1904", "1905", "1906", "1907", "1908", "1909", "1910", "1911", "1912", "1913", "1914", "1915", "1916", "1917", "1918", "1919", "1920", "1921", "1922", "1923", "1924", "1925", "1926", "1927", "1928", "1929", "1930", "1931", "1932", "1933", "1934", "1935", "1936", "1937", "1938", "1939", "1940", "1941", "1942", "1943", "1944", "1945", "1946", "1947", "1948", "1949", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050", "2051", "2052", "2053", "2054", "2055", "2056", "2057", "2058", "2059", "2060", "2061", "2062", "2063", "2064", "2065", "2066", "2067", "2068", "2069", "2070", "2071", "2072", "2073", "2074", "2075", "2076", "2077", "2078", "2079", "2080", "2081", "2082", "2083", "2084", "2085", "2086", "2087", "2088", "2089", "2090", "2091", "2092", "2093", "2094", "2095", "2096", "2097", "2098", "2099", "2100", " " }));
        rok_wyd.setEnabled(false);

        dzien_wyd.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", " " }));
        dzien_wyd.setEnabled(false);

        miesiac_wyd.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        miesiac_wyd.setEnabled(false);

        jLabel8.setText("Inny typ:");
        jLabel8.setEnabled(false);

        inny_typ.setEnabled(false);

        javax.swing.GroupLayout fWydarzeniaLayout = new javax.swing.GroupLayout(fWydarzenia.getContentPane());
        fWydarzenia.getContentPane().setLayout(fWydarzeniaLayout);
        fWydarzeniaLayout.setHorizontalGroup(
            fWydarzeniaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fWydarzeniaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fWydarzeniaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fWydarzeniaLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(miejsce_wydarzenia)
                        .addGap(43, 43, 43))
                    .addGroup(fWydarzeniaLayout.createSequentialGroup()
                        .addGroup(fWydarzeniaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(fWydarzeniaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(fWydarzeniaLayout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addGroup(fWydarzeniaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(fWydarzeniaLayout.createSequentialGroup()
                                            .addComponent(zapisz_wyd)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(anuluj_wyd))
                                        .addComponent(dodaj_wyd)))
                                .addGroup(fWydarzeniaLayout.createSequentialGroup()
                                    .addComponent(pier_wyd)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(pop_wyd)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(nast_wyd)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(ost_wyd))
                                .addComponent(lista_wyd))
                            .addGroup(fWydarzeniaLayout.createSequentialGroup()
                                .addComponent(usun_wyd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(zmien_wyd))
                            .addGroup(fWydarzeniaLayout.createSequentialGroup()
                                .addGroup(fWydarzeniaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(fWydarzeniaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(fWydarzeniaLayout.createSequentialGroup()
                                        .addComponent(dzien_wyd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(miesiac_wyd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(rok_wyd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(fWydarzeniaLayout.createSequentialGroup()
                                        .addComponent(typ_wydarzen, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel8)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(fWydarzeniaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(inny_typ, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(fWydarzeniaLayout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(godziny_wyd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(minuty_wyd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        fWydarzeniaLayout.setVerticalGroup(
            fWydarzeniaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fWydarzeniaLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(fWydarzeniaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fWydarzeniaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(typ_wydarzen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addComponent(jLabel3)
                    .addComponent(inny_typ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fWydarzeniaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(godziny_wyd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minuty_wyd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dzien_wyd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(miesiac_wyd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rok_wyd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fWydarzeniaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(miejsce_wydarzenia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dodaj_wyd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(fWydarzeniaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zapisz_wyd)
                    .addComponent(anuluj_wyd))
                .addGap(27, 27, 27)
                .addGroup(fWydarzeniaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pier_wyd)
                    .addComponent(pop_wyd)
                    .addComponent(nast_wyd)
                    .addComponent(ost_wyd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lista_wyd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fWydarzeniaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usun_wyd)
                    .addComponent(zmien_wyd))
                .addContainerGap(171, Short.MAX_VALUE))
        );

        fMain.addTab("Wydarzenia", fWydarzenia);

        fNauczyciele.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        fNauczyciele.setTitle("Nauczyciele");
        fNauczyciele.setVisible(true);

        jLabel9.setText("NAUCZYCIELE");

        jLabel11.setText("Imie");

        jLabel12.setText("Nazwisko");

        jLabel13.setText("Sala");
        jLabel13.setEnabled(false);

        sala.setEnabled(false);

        jLabel14.setText("Wprowadzic dyzur?");

        jLabel15.setText("Dzień:");
        jLabel15.setEnabled(false);

        jLabel16.setText("godzina od :");
        jLabel16.setEnabled(false);

        jLabel17.setText("godzina do:");
        jLabel17.setEnabled(false);

        Zapisz_N.setText("Zapisz");
        Zapisz_N.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Zapisz_NActionPerformed(evt);
            }
        });

        Anuluj_N.setText("Anuluj");
        Anuluj_N.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Anuluj_NActionPerformed(evt);
            }
        });

        First_dyz.setText("|< Poprzedni");
        First_dyz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                First_dyzActionPerformed(evt);
            }
        });

        Previous_dyz.setText("<< Poprzedni");
        Previous_dyz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Previous_dyzActionPerformed(evt);
            }
        });

        Next_dyz.setText("Nastepny >>");
        Next_dyz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Next_dyzActionPerformed(evt);
            }
        });

        Last_dyz.setText("Ostatni>|");
        Last_dyz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Last_dyzActionPerformed(evt);
            }
        });

        Delete.setText("Usun");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        buttonGroup1.add(BoxTak);
        BoxTak.setText("Tak");
        BoxTak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoxTakActionPerformed(evt);
            }
        });

        buttonGroup1.add(BoxNie);
        BoxNie.setSelected(true);
        BoxNie.setText("Nie");
        BoxNie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoxNieActionPerformed(evt);
            }
        });

        lista_n.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lista_nActionPerformed(evt);
            }
        });

        aktualizuj_dyz.setText("Dodaj");
        aktualizuj_dyz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aktualizuj_dyzActionPerformed(evt);
            }
        });

        godziny_dyz_od_h.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));

        godziny_dyz_od_m.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        godziny_dyz_do_m.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        godziny_dyz_do_h.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));

        dzien_dyz.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Poniedziałek", "Wtorek", "Środa", "Czwartek", "Piątek", "Sobota", "Niedziela" }));

        javax.swing.GroupLayout fNauczycieleLayout = new javax.swing.GroupLayout(fNauczyciele.getContentPane());
        fNauczyciele.getContentPane().setLayout(fNauczycieleLayout);
        fNauczycieleLayout.setHorizontalGroup(
            fNauczycieleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fNauczycieleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fNauczycieleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lista_dyz)
                    .addGroup(fNauczycieleLayout.createSequentialGroup()
                        .addGroup(fNauczycieleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(fNauczycieleLayout.createSequentialGroup()
                                .addGroup(fNauczycieleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(fNauczycieleLayout.createSequentialGroup()
                                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(dzien_dyz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(40, 40, 40))
                                    .addComponent(aktualizuj_dyz))
                                .addGroup(fNauczycieleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(fNauczycieleLayout.createSequentialGroup()
                                        .addGap(166, 166, 166)
                                        .addComponent(Anuluj_N))
                                    .addGroup(fNauczycieleLayout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(godziny_dyz_od_h, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(godziny_dyz_od_m, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel17)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(godziny_dyz_do_h, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(godziny_dyz_do_m, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(fNauczycieleLayout.createSequentialGroup()
                                .addComponent(First_dyz)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Previous_dyz)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Next_dyz)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Last_dyz)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sala, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(fNauczycieleLayout.createSequentialGroup()
                .addGroup(fNauczycieleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fNauczycieleLayout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(Delete))
                    .addGroup(fNauczycieleLayout.createSequentialGroup()
                        .addGroup(fNauczycieleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, fNauczycieleLayout.createSequentialGroup()
                                .addGap(258, 258, 258)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, fNauczycieleLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(imie, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)
                                .addGroup(fNauczycieleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(fNauczycieleLayout.createSequentialGroup()
                                        .addComponent(BoxTak)
                                        .addGap(47, 47, 47)
                                        .addComponent(BoxNie))
                                    .addGroup(fNauczycieleLayout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(nazwisko, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(fNauczycieleLayout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Zapisz_N)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lista_n, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(46, 46, 46))
        );
        fNauczycieleLayout.setVerticalGroup(
            fNauczycieleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fNauczycieleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fNauczycieleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(imie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nazwisko, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Zapisz_N)
                    .addComponent(lista_n, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(fNauczycieleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BoxTak)
                    .addComponent(BoxNie))
                .addGap(18, 18, 18)
                .addGroup(fNauczycieleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel13)
                    .addComponent(sala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(godziny_dyz_od_h, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(godziny_dyz_od_m, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dzien_dyz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(godziny_dyz_do_m, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(godziny_dyz_do_h, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(fNauczycieleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Anuluj_N)
                    .addComponent(aktualizuj_dyz))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(fNauczycieleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(First_dyz)
                    .addComponent(Previous_dyz)
                    .addComponent(Next_dyz)
                    .addComponent(Last_dyz))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lista_dyz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Delete)
                .addContainerGap(128, Short.MAX_VALUE))
        );

        fMain.addTab("Nauczyciele", fNauczyciele);

        fSemstr.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        fSemstr.setTitle("Plan zajęć");
        fSemstr.setVisible(true);

        jLabel7.setText("Zarządzanie Semestrem");

        jLabel10.setText("Semestr");

        semestr.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "zimowy", "letni" }));

        jLabel18.setText("Rok");

        rok_s1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1900", "1901", "1902", "1903", "1904", "1905", "1906", "1907", "1908", "1909", "1910", "1911", "1912", "1913", "1914", "1915", "1916", "1917", "1918", "1919", "1920", "1921", "1922", "1923", "1924", "1925", "1926", "1927", "1928", "1929", "1930", "1931", "1932", "1933", "1934", "1935", "1936", "1937", "1938", "1939", "1940", "1941", "1942", "1943", "1944", "1945", "1946", "1947", "1948", "1949", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050", "2051", "2052", "2053", "2054", "2055", "2056", "2057", "2058", "2059", "2060", "2061", "2062", "2063", "2064", "2065", "2066", "2067", "2068", "2069", "2070", "2071", "2072", "2073", "2074", "2075", "2076", "2077", "2078", "2079", "2080", "2081", "2082", "2083", "2084", "2085", "2086", "2087", "2088", "2089", "2090", "2091", "2092", "2093", "2094", "2095", "2096", "2097", "2098", "2099", "2100", " " }));

        jLabel19.setText("/");

        rok_s2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99" }));

        Zapisz_sem.setText("Zapisz");
        Zapisz_sem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Zapisz_semActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout fSemstrLayout = new javax.swing.GroupLayout(fSemstr.getContentPane());
        fSemstr.getContentPane().setLayout(fSemstrLayout);
        fSemstrLayout.setHorizontalGroup(
            fSemstrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fSemstrLayout.createSequentialGroup()
                .addGroup(fSemstrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fSemstrLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(semestr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rok_s1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rok_s2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Zapisz_sem))
                    .addGroup(fSemstrLayout.createSequentialGroup()
                        .addGap(280, 280, 280)
                        .addComponent(jLabel7)))
                .addContainerGap(476, Short.MAX_VALUE))
        );
        fSemstrLayout.setVerticalGroup(
            fSemstrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fSemstrLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fSemstrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(semestr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(rok_s1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(rok_s2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Zapisz_sem))
                .addContainerGap(383, Short.MAX_VALUE))
        );

        fMain.addTab("Semestr", fSemstr);

        fTest.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        fTest.setPreferredSize(new java.awt.Dimension(870, 470));
        fTest.setVisible(true);

        sPlan2.setBackground(new java.awt.Color(255, 255, 255));
        sPlan2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        sPlan3.setBackground(new java.awt.Color(255, 255, 255));
        sPlan3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        sPlan4.setBackground(new java.awt.Color(255, 255, 255));
        sPlan4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        sPlan1.setBackground(new java.awt.Color(255, 255, 255));
        sPlan1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        sPlan5.setBackground(new java.awt.Color(255, 255, 255));
        sPlan5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        sPlan0.setBackground(new java.awt.Color(255, 255, 255));
        sPlan0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        sPlan0.setPreferredSize(new java.awt.Dimension(465, 402));

        tGodz.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"8:00 - 10:00"},
                {"10:00 - 12:00"},
                {"12:00 - 14:00"},
                {"14:00 - 16:00"},
                {"16:00 - 18:00"},
                {"18:00 - 20:00"}
            },
            new String [] {
                "Godzina"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        sPlan0.setViewportView(tGodz);
        if (tGodz.getColumnModel().getColumnCount() > 0) {
            tGodz.getColumnModel().getColumn(0).setResizable(false);
        }
        try
        {
            for (int row = 0; row < tGodz.getRowCount(); row++)
            {
                int rowHeight = tGodz.getRowHeight();

                for (int column = 0; column < tGodz.getColumnCount(); column++)
                {
                    Component comp = tGodz.prepareRenderer(tGodz.getCellRenderer(row, column), row, column);
                    rowHeight = 55;
                }

                tGodz.setRowHeight(row, rowHeight);

            }
            tGodz.setShowHorizontalLines(true);
            tGodz.setShowVerticalLines(true);
            tGodz.setGridColor(Color.orange);
            tGodz.setBackground(new java.awt.Color(255, 255, 204));
        }
        catch(ClassCastException e) {}

        javax.swing.GroupLayout fTestLayout = new javax.swing.GroupLayout(fTest.getContentPane());
        fTest.getContentPane().setLayout(fTestLayout);
        fTestLayout.setHorizontalGroup(
            fTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fTestLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sPlan0, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sPlan1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sPlan2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sPlan3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sPlan4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sPlan5, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        fTestLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {sPlan2, sPlan3, sPlan4, sPlan5});

        fTestLayout.setVerticalGroup(
            fTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fTestLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(fTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sPlan2, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sPlan3, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sPlan4, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sPlan5, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sPlan1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sPlan0, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61))
        );

        fMain.addTab("", new javax.swing.ImageIcon(getClass().getResource("/organizer/icon_plan.PNG")), fTest); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(fMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void typ_wydarzenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typ_wydarzenActionPerformed
String typy= typ_wydarzen.getSelectedItem().toString();
          if(typy.equals("inne")){
      jLabel8.setEnabled(true);
      inny_typ.setEnabled(true);
          }
          else{
              jLabel8.setEnabled(false);
      inny_typ.setEnabled(false);
          }
              
        

// TODO add your handling code here:
    }//GEN-LAST:event_typ_wydarzenActionPerformed

    private void dodaj_wydActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dodaj_wydActionPerformed
        
        
        
        typ_wydarzen.setEnabled(true);
        dzien_wyd.setEnabled(true);
        miesiac_wyd.setEnabled(true);
        rok_wyd.setEnabled(true);
        godziny_wyd.setEnabled(true);
        minuty_wyd.setEnabled(true);        
        miejsce_wydarzenia.setEnabled(true);
        jLabel4.setEnabled(true);
        jLabel6.setEnabled(true);
        jLabel3.setEnabled(true);
        jLabel5.setEnabled(true);
        
           
       try{
        current_row = rs_w.getRow(); 
            while(rs_w.next())
            {
                current_row = rs_w.getRow();
            }

            String sql = "SELECT * FROM WYDARZENIA";  
        
        }
       catch (SQLException err){System.out.println(err.getMessage());} 
        


// TODO add your handling code here:
    }//GEN-LAST:event_dodaj_wydActionPerformed

    private void zapisz_wydActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zapisz_wydActionPerformed
      String miejsce = miejsce_wydarzenia.getText();
      String typ;
      String typy= typ_wydarzen.getSelectedItem().toString();
          if(typy.equals("inne"))
      {
      
      
       typ = inny_typ.getText();
      }
      else
      {
          
          typ= typ_wydarzen.getSelectedItem().toString();
      }
      
      
      
      String data_w =(rok_wyd.getSelectedItem().toString()+"-"+miesiac_wyd.getSelectedItem().toString()+"-"+dzien_wyd.getSelectedItem().toString());
     
      
       DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd", Locale.ENGLISH);
       
        String czas = (godziny_wyd.getSelectedItem().toString()+":"+minuty_wyd.getSelectedItem().toString()+":00");
            SimpleDateFormat informat =  new SimpleDateFormat("hh:mm:ss");
            
        try{
             LocalDate data = LocalDate.parse(data_w, formatter);
            
            while(rs_w.next())
            {
                current_row = rs_w.getInt("ID_WYD");
            }
            current_row ++;
            
             //System.out.println(date);
		//System.out.println(formatter.format(date));
                //data = informat.parse(czas);
            rs_w.moveToInsertRow();
            
            rs_w.updateInt("id_wyd",current_row);
            rs_w.updateString("czas_wyd", czas);
            rs_w.updateString("data_wyd", data_w);
            rs_w.updateString("miejsce_wyd", miejsce);
            rs_w.updateString("typ_wyd", typ);
            rs_w.insertRow();
             
            stmt_w.close();
            rs_w.close();
             
            stmt_w = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String sql3 = "SELECT * FROM WYDARZENIA";
            rs_w = stmt_w.executeQuery(sql3);
            
                while (rs_w.next())
                {
                   int id_kol = rs_w.getInt("id_wyd");
                   String id = Integer.toString(id_kol);
                   String miejsce2 = rs_w.getString("miejsce_wyd");
                   String typ2 = rs_w.getString("typ_wyd");
                   String data_w2 = rs_w.getString("data_wyd");
                   String czas2 = rs_w.getString("czas_wyd"); 
                }
                
                while (rs_w.previous()){current_row = rs_w.getRow();}
                rs_w.absolute(current_row);
            
            lista_wyd.setText(rs_w.getString("TYP_WYD")+ " " + rs_w.getString("DATA_WYD")+ " " +rs_w.getString("CZAS_WYD")+" " + rs_w.getString("MIEJSCE_WYD") );
     
        } catch (SQLException err) {
            System.out.println(err.getMessage());
        }  {
            } 
        typ_wydarzen.setEnabled(false);
        
        
        miejsce_wydarzenia.setEnabled(false);
        jLabel4.setEnabled(false);
        jLabel6.setEnabled(false);
        jLabel3.setEnabled(false);
        jLabel5.setEnabled(false);
        
        dzien_wyd.setEnabled(false);
        miesiac_wyd.setEnabled(false);
        rok_wyd.setEnabled(false);
        godziny_wyd.setEnabled(false);
        minuty_wyd.setEnabled(false);
        inny_typ.setEnabled(false);
        jLabel8.setEnabled(false);
                   
    }//GEN-LAST:event_zapisz_wydActionPerformed

    private void anuluj_wydActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anuluj_wydActionPerformed
try{
            
            while(rs_w.previous())
            {
                current_row = rs_w.getRow();
            } 
            rs_w.absolute(current_row);
            
            lista_wyd.setText(rs_w.getString("TYP_WYD")+ " " + rs_w.getString("DATA_WYD")+ " " +rs_w.getString("CZAS_WYD")+" " + rs_w.getString("MIEJSCE_WYD") );
            
            
       typ_wydarzen.setEnabled(false);
        
        miejsce_wydarzenia.setEnabled(false);
        }
        catch(SQLException err) {System.out.println(err.getMessage());}        
    }//GEN-LAST:event_anuluj_wydActionPerformed

    private void pier_wydActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pier_wydActionPerformed
       try{
            while(rs_w.previous()){
               
                
                String lista = (rs_w.getString("TYP_WYD")+ " " + rs_w.getString("DATA_WYD")+ " " +rs_w.getString("CZAS_WYD")+" " + rs_w.getString("MIEJSCE_WYD") );

                
                lista_wyd.setText(lista);
            }
        } catch (SQLException err) {
            JOptionPane.showMessageDialog(GUI.this, err.getMessage());
        }
    }//GEN-LAST:event_pier_wydActionPerformed

    private void pop_wydActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pop_wydActionPerformed
        try{
            if(rs_w.previous()){
                
                
                String lista = (rs_w.getString("TYP_WYD")+ " " + rs_w.getString("DATA_WYD")+ " " +rs_w.getString("CZAS_WYD")+" " + rs_w.getString("MIEJSCE_WYD") );

                
                lista_wyd.setText(lista);
            } else {
                rs_w.next();
                JOptionPane.showMessageDialog(GUI.this, "To jest pierwsze wydarzenie.");
            }
        } catch (SQLException err) {
            JOptionPane.showMessageDialog(GUI.this, err.getMessage());
        }
    }//GEN-LAST:event_pop_wydActionPerformed

    private void nast_wydActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nast_wydActionPerformed
       try{
            if(rs_w.next()){
                

                String lista1 = (rs_w.getString("TYP_WYD")+ " " + rs_w.getString("DATA_WYD")+ " " +rs_w.getString("CZAS_WYD")+" " + rs_w.getString("MIEJSCE_WYD") );

                
                lista_wyd.setText(lista1);
            } else {
                rs_w.previous();
                JOptionPane.showMessageDialog(GUI.this, "To jest osatnie wydarzenie.");
            }
        } catch (SQLException err) {
            JOptionPane.showMessageDialog(GUI.this, err.getMessage());
        }
    }//GEN-LAST:event_nast_wydActionPerformed

    private void ost_wydActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ost_wydActionPerformed
       try{
            while(rs_w.next()){
                String lista2 = (rs_w.getString("TYP_WYD")+ " " + rs_w.getString("DATA_WYD")+ " " +rs_w.getString("CZAS_WYD")+" " + rs_w.getString("MIEJSCE_WYD") );

                
                lista_wyd.setText(lista2);
            }
        } catch (SQLException err) {
            JOptionPane.showMessageDialog(GUI.this, err.getMessage());
        }
    }//GEN-LAST:event_ost_wydActionPerformed

    private void usun_wydActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usun_wydActionPerformed
      try {       
            rs_w.deleteRow();
            stmt_w.close();
            rs_w.close();
            stmt_w = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String sql = "SELECT * FROM WYDARZENIA";
            rs_w = stmt_w.executeQuery(sql);
             
            rs_w.next();
            String lista2 = (rs_w.getString("TYP_WYD")+ " " + rs_w.getString("DATA_WYD")+ " " +rs_w.getString("CZAS_WYD")+" " + rs_w.getString("MIEJSCE_WYD") );

                
                lista_wyd.setText(lista2);
             
        } catch (SQLException err){
            JOptionPane.showMessageDialog(GUI.this, err.getMessage());
        }
    }//GEN-LAST:event_usun_wydActionPerformed

    private void lista_nActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lista_nActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_lista_nActionPerformed

    private void BoxNieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoxNieActionPerformed
        jLabel15.setEnabled(false);
        jLabel16.setEnabled(false);
        jLabel17.setEnabled(false);
        jLabel13.setEnabled(false);
        //dzien_dyzuru.setEnabled(false);
        //godzina_od_dyzuru.setEnabled(false);
        //godzina_do_dyzuru.setEnabled(false);
        sala.setEnabled(false);
    }//GEN-LAST:event_BoxNieActionPerformed

    private void BoxTakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoxTakActionPerformed
        jLabel15.setEnabled(true);
        jLabel16.setEnabled(true);
        jLabel17.setEnabled(true);
        jLabel13.setEnabled(true);
//        dzien_dyzuru.setEnabled(true);
        //godzina_od_dyzuru.setEnabled(true);
        //godzina_do_dyzuru.setEnabled(true);
        sala.setEnabled(true);
    }//GEN-LAST:event_BoxTakActionPerformed

    private void Anuluj_NActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Anuluj_NActionPerformed
       try{
            
            while(rs_d.previous())
            {
                current_row = rs_d.getRow();
            } 
            rs_d.absolute(current_row);
            
            lista_dyz.setText(rs_d.getString("DZIEN")+ " "+ "od " + rs_d.getString("GODZINA_OD")+ " "+" do " +rs_d.getString("GODZINA_DO") );
            
            
       
        
        
        }
        catch(SQLException err) {System.out.println(err.getMessage());} 
    }//GEN-LAST:event_Anuluj_NActionPerformed

    private void Zapisz_NActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Zapisz_NActionPerformed
        // TODO add your handling code here:
        
        String imie_n = imie.getText();
        String nazwisko_n = nazwisko.getText();
        try{
while(rs_n.next())
            {
                current_row = rs_n.getInt("ID_NAUCZYCIELA");
            }
            current_row ++;
            rs_n.moveToInsertRow();
            rs_n.updateInt("ID_NAUCZYCIELA", current_row);
            rs_n.updateString("IMIE", imie_n);
            rs_n.updateString("NAZWISKO", nazwisko_n);
            rs_n.insertRow();

            stmt_n.close();
            rs_n.close();

            stmt_n = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String sql2 = "SELECT * FROM NAUCZYCIELE";
            rs_n = stmt_p.executeQuery(sql2);

        } catch (SQLException err) {
            System.out.println(err.getMessage());
        }

    }//GEN-LAST:event_Zapisz_NActionPerformed

    private void Last_dyzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Last_dyzActionPerformed
      try{
            while(rs_d.next()){
                String lista2 = (rs_d.getString("DZIEN")+ " "+ "od " + rs_d.getString("GODZINA_OD")+ " "+" do " +rs_d.getString("GODZINA_DO") );

                
                lista_dyz.setText(lista2);
            }
        } catch (SQLException err) {
            JOptionPane.showMessageDialog(GUI.this, err.getMessage());
        }
    }//GEN-LAST:event_Last_dyzActionPerformed

    private void aktualizuj_dyzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aktualizuj_dyzActionPerformed
        String miejsce = sala.getText();
        String data_w =dzien_dyz.getSelectedItem().toString();
        String czas_od = (godziny_dyz_od_h.getSelectedItem().toString()+":"+godziny_dyz_od_m.getSelectedItem().toString()+":00");
            SimpleDateFormat informat =  new SimpleDateFormat("hh:mm:ss");
            String czas_do = (godziny_dyz_do_h.getSelectedItem().toString()+":"+godziny_dyz_do_m.getSelectedItem().toString()+":00");
        try{
             
            
            while(rs_d.next())
            {
                current_row = rs_d.getInt("ID_DYZURU");
            }
            current_row ++;
            
             //System.out.println(date);
		//System.out.println(formatter.format(date));
                //data = informat.parse(czas);
            rs_d.moveToInsertRow();
            
            rs_d.updateInt("id_dyzuru",current_row);
            rs_d.updateString("godzina_od", czas_od);
            rs_d.updateString("godzina_do", czas_do);
            rs_d.updateString("dzien", data_w);
            
            rs_d.insertRow();
             
            stmt_d.close();
            rs_w.close();
             
            stmt_d = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String sql3 = "SELECT * FROM DYZURY";
            rs_d = stmt_d.executeQuery(sql3);
            
                while (rs_d.next())
                {
                   int id_kol = rs_d.getInt("id_dyzuru");
                   String id = Integer.toString(id_kol);
                   String dzien = rs_d.getString("dzien");
                   String godzina_od = rs_d.getString("godzina_od");
                   String godzina_do = rs_d.getString("godzina_do");
                   
                }
                
                while (rs_d.previous()){current_row = rs_d.getRow();}
                rs_d.absolute(current_row);
            
            lista_dyz.setText(rs_d.getString("DZIEN")+ " "+ "od " + rs_d.getString("GODZINA_OD")+ " "+" do " +rs_d.getString("GODZINA_DO") );
     
        } catch (SQLException err) {
            System.out.println(err.getMessage());
        }  {
            } 
    }//GEN-LAST:event_aktualizuj_dyzActionPerformed

    private void godziny_wydActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_godziny_wydActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_godziny_wydActionPerformed

    private void First_dyzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_First_dyzActionPerformed
       try{
            while(rs_d.previous()){
               
                
                String lista = (rs_d.getString("DZIEN")+ " "+ "od " + rs_d.getString("GODZINA_OD")+ " "+" do " +rs_d.getString("GODZINA_DO") );

                
                lista_dyz.setText(lista);
            }
        } catch (SQLException err) {
            JOptionPane.showMessageDialog(GUI.this, err.getMessage());
        }
    }//GEN-LAST:event_First_dyzActionPerformed

    private void Previous_dyzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Previous_dyzActionPerformed
       try{
            if(rs_d.previous()){
                
                
                String lista = (rs_d.getString("DZIEN")+ " "+ "od " + rs_d.getString("GODZINA_OD")+ " "+" do " +rs_d.getString("GODZINA_DO") );

                
                lista_dyz.setText(lista);
            } else {
                rs_d.next();
                JOptionPane.showMessageDialog(GUI.this, "To jest pierwszy dyżur.");
            }
        } catch (SQLException err) {
            JOptionPane.showMessageDialog(GUI.this, err.getMessage());
        }
    }//GEN-LAST:event_Previous_dyzActionPerformed

    private void Next_dyzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Next_dyzActionPerformed
       try{
            if(rs_d.next()){
                

                String lista1 = (rs_d.getString("DZIEN")+ " "+ "od " + rs_d.getString("GODZINA_OD")+ " "+" do " +rs_d.getString("GODZINA_DO") );

                
                lista_dyz.setText(lista1);
            } else {
                rs_d.previous();
                JOptionPane.showMessageDialog(GUI.this, "To jest osatni dyżur.");
            }
        } catch (SQLException err) {
            JOptionPane.showMessageDialog(GUI.this, err.getMessage());
        }
    }//GEN-LAST:event_Next_dyzActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
       try {       
            rs_d.deleteRow();
            stmt_d.close();
            rs_d.close();
            stmt_d = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String sql = "SELECT * FROM DYZURY";
            rs_d = stmt_d.executeQuery(sql);
             
            rs_d.next();
            String lista2 = (rs_d.getString("DZIEN")+ " "+ "od " + rs_d.getString("GODZINA_OD")+ " "+" do " +rs_d.getString("GODZINA_DO") );

                
                lista_dyz.setText(lista2);
             
        } catch (SQLException err){
            JOptionPane.showMessageDialog(GUI.this, err.getMessage());
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void update()
    {
        try{
            while(rs_p.previous()) {}
            cbPrzedmioty.removeAllItems();
            while(rs_p.next())
            {
                cbPrzedmioty.addItem(rs_p.getString("NAZWA"));
            }
            
            while(rs_p.previous()) {}
            cbPrzedmioty2.removeAllItems();
            while(rs_p.next())
            {
                cbPrzedmioty2.addItem(rs_p.getString("NAZWA"));
            }
            
            while(rs_n.previous()) {}
            cbNauczyciele.removeAllItems();
            while(rs_n.next())
            {
                cbNauczyciele.addItem(rs_n.getString("IMIE") + " " + rs_n.getString("NAZWISKO"));
            }
            
             while(rs_s.previous()) {}
            cbSemestry.removeAllItems();
            while(rs_s.next())
            {
                cbSemestry.addItem(rs_s.getString("NAZWA") + " " + rs_s.getString("ROK"));
            }
            
            while(rs_t.previous()) {}
            cbTyp.removeAllItems();
            while(rs_t.next())
            {
                cbTyp.addItem(rs_t.getString("NAZWA"));
            }
            
            while(rs_g.previous()) {}
            cbGodziny.removeAllItems();
            
            while(rs_g.next())
            {
                cbGodziny.addItem(rs_g.getString("ID_GODZINY") + ") " + rs_g.getTime("GODZINA_OD") + " - " + rs_g.getTime("GODZINA_DO"));
            }
     
            while(rs_n.previous()) {}
            lista_n.removeAllItems();
            while(rs_n.next())
            {
                lista_n.addItem(rs_n.getString("IMIE") + " " + rs_n.getString("NAZWISKO"));
            }
            
        }
        catch (SQLException err) {
            System.out.println(err.getMessage());
        }
    }
    
    private int get_id_nauczyciela(javax.swing.JComboBox c)
    {
        int id_nauczyciela=0;
        String[] wybor = (c.getSelectedItem().toString()).split("\\s+");
        try{
            rs_pom1.close();
            stmt_pom1.close();
            stmt_pom1 = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rs_pom1 = stmt_pom1.executeQuery("SELECT * FROM NAUCZYCIELE WHERE IMIE = '" + wybor[0] + "' AND NAZWISKO = '"+wybor[1] + "'");
            while(rs_pom1.next()) id_nauczyciela = rs_pom1.getInt("ID_NAUCZYCIELA");
            
        } catch (SQLException err) {System.out.println(err.getMessage()); }
        return(id_nauczyciela);
    }
    
    private int get_id_przedmiotu(javax.swing.JComboBox c)
    {
        int id_przedmiotu=0;
        String wybor = c.getSelectedItem().toString();
        try{
            rs_pom1.close();
            stmt_pom1.close();
            stmt_pom1 = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rs_pom1 = stmt_pom1.executeQuery("SELECT * FROM PRZEDMIOTY WHERE NAZWA = '" + wybor + "'");
            while(rs_pom1.next()) id_przedmiotu = rs_pom1.getInt("ID_PRZEDMIOTU");
            
        } catch (SQLException err) {System.out.println(err.getMessage()); }
        return(id_przedmiotu);
    }
    
    private int get_id_godziny(javax.swing.JComboBox c)
    {
        String[] wybor = (c.getSelectedItem().toString()).split("\\)");
        int id_godziny = Integer.parseInt(wybor[0]);
        return(id_godziny);
    }
    
    private int get_id_typu(javax.swing.JComboBox c)
    {
        int id_typu=0;
        String wybor = (c.getSelectedItem().toString());
        try{
            rs_pom1.close();
            stmt_pom1.close();
            stmt_pom1 = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rs_pom1 = stmt_pom1.executeQuery("SELECT * FROM TYPY_ZAJEC WHERE NAZWA = '" + wybor + "'");
            while(rs_pom1.next()) id_typu = rs_pom1.getInt("ID_TYPU");
        } catch (SQLException err) {System.out.println(err.getMessage()); }
        return (id_typu);
    }
    
    private int get_id_semestru(javax.swing.JComboBox c)
    {
        int id_semestru=0;
        String[] wybor = (c.getSelectedItem().toString()).split("\\s+");
        try{
            rs_pom1.close();
            stmt_pom1.close();
            stmt_pom1 = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rs_pom1 = stmt_pom1.executeQuery("SELECT * FROM SEMESTR WHERE NAZWA = '" + wybor[0] + "' AND ROK = '"+wybor[1] + "'");
            while(rs_pom1.next()) id_semestru = rs_pom1.getInt("ID_SEMESTRU");
        } catch (SQLException err) {System.out.println(err.getMessage()); }
        return(id_semestru);
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here
    }//GEN-LAST:event_jButton2ActionPerformed

    private void Zapisz_semActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Zapisz_semActionPerformed
        String nazwa = semestr.getSelectedItem().toString();
        String rok = (rok_s1.getSelectedItem().toString()+"/"+rok_s2.getSelectedItem().toString());

        try{

            while(rs_s.next())
            {
                current_row = rs_s.getInt("ID_SEMESTRU");
            }
            current_row ++;

            //System.out.println(date);
            //System.out.println(formatter.format(date));
            //data = informat.parse(czas);
            rs_s.moveToInsertRow();

            rs_s.updateInt("id_semestru",current_row);
            rs_s.updateString("NAZWA", nazwa);
            rs_s.updateString("ROK", rok);

            rs_s.insertRow();

            stmt_s.close();
            rs_s.close();

            stmt_s = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String sql3 = "SELECT * FROM SEMESTR";
            rs_s = stmt_s.executeQuery(sql3);

            while (rs_s.next())
            {
                int id_kol = rs_s.getInt("id_semestru");
                String id = Integer.toString(id_kol);
                String rok1 = rs_s.getString("ROK");
                String nazwa1 = rs_s.getString("NAZWA");

            }

            // while (rs_d.previous()){current_row = rs_d.getRow();}
            //rs_d.absolute(current_row);

            // lista_dyz.setText(rs_d.getString("DZIEN")+ " "+ "od " + rs_d.getString("GODZINA_OD")+ " "+" do " +rs_d.getString("GODZINA_DO") );

        } catch (SQLException err) {
            System.out.println(err.getMessage());
        }  {
        }
    }//GEN-LAST:event_Zapisz_semActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void bAnulujZajeciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAnulujZajeciaActionPerformed
        Zajecia_set_buttons(false);
    }//GEN-LAST:event_bAnulujZajeciaActionPerformed

    private void bZapiszZajeciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bZapiszZajeciaActionPerformed
        String sala = tfSala.getText();
        String dzien = dzien_plan1.getSelectedItem().toString();
        int id_nauczyciela = get_id_nauczyciela(cbNauczyciele);
        int id_typu = get_id_typu(cbTyp);
        int id_godziny = get_id_godziny(cbGodziny);
        int id_semestru = get_id_semestru(cbSemestry);
        int id_przedmiotu = get_id_przedmiotu(cbPrzedmioty2);
        //JOptionPane.showMessageDialog(null, id_przedmiotu+"-"+id_nauczyciela+"-"+id_typu+"-"+id_godziny+"-"+id_semestru);
        
        if (sala.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Proszę podać salę.","Błąd wpisywania", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try{
            while(rs_z.previous());
            while(rs_z.next())
            {
                current_row = rs_z.getInt("ID_ZAJEC");
            }
            current_row ++;

            rs_z.moveToInsertRow();

            rs_z.updateInt("ID_ZAJEC", current_row);
            rs_z.updateInt("ID_PRZEDMIOTU", id_przedmiotu);
            rs_z.updateString("SALA", sala);
            rs_z.updateString("DZIEN", dzien);
            rs_z.updateInt("ID_NAUCZYCIELA",id_nauczyciela);
            rs_z.updateInt("ID_TYPU",id_typu);
            rs_z.updateInt("ID_SEMESTRU",id_semestru);
            rs_z.updateInt("ID_GODZINY",id_godziny);

            rs_z.insertRow();

            stmt_z.close();
            rs_z.close();
            stmt_pl.close();
            rs_pl.close();

            stmt_z = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rs_z = stmt_z.executeQuery("SELECT * FROM ZAJĘCIA");

            while(rs_z.previous());
            
            
            String sql_pl = "select p.NAZWA as NAZWA , g.GODZINA_OD, g.GODZINA_DO, t.NAZWA as Typ, n.IMIE, n.NAZWISKO, z.SALA, z.DZIEN\n" +
                        "FROM ZAJĘCIA z JOIN PRZEDMIOTY p Using(ID_PRZEDMIOTU)\n" +
                        "JOIN GODZINY g USING(ID_GODZINY)\n" +
                        "JOIN TYPY_ZAJEC t USING(ID_TYPU)\n" +
                        "JOIN NAUCZYCIELE n USING (ID_NAUCZYCIELA)";
            stmt_pl = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rs_pl = stmt_z.executeQuery(sql_pl);
            while(rs_pl.previous());
            int i = 0;
            while(rs_pl.next()) i++;
            while(rs_pl.previous());
            lZajecia2.setText("/"+Integer.toString(i));
            lZajecia1.setText("0");

        } catch (SQLException err) {System.out.println(err.getMessage());}
        Zajecia_set_buttons(false);
    }//GEN-LAST:event_bZapiszZajeciaActionPerformed

    private void bDodajZajeciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDodajZajeciaActionPerformed
        Zajecia_set_buttons(true);
    }//GEN-LAST:event_bDodajZajeciaActionPerformed

    private void tfNazwaPrzedmiotuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNazwaPrzedmiotuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNazwaPrzedmiotuActionPerformed

    private void bAnulujPrzedmiotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAnulujPrzedmiotActionPerformed
        tfNazwaPrzedmiotu.setText("");
        bZapiszPrzedmiot.setEnabled(false);
        bAnulujPrzedmiot.setEnabled(false);
        tfNazwaPrzedmiotu.setEnabled(false);
    }//GEN-LAST:event_bAnulujPrzedmiotActionPerformed

    private void bZapiszPrzedmiotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bZapiszPrzedmiotActionPerformed
        String nazwa = tfNazwaPrzedmiotu.getText();
        if(nazwa.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Proszę wpisać nazwę przedmiotu.","Błąd wpisywania",
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        try{
            while(rs_p.previous());
            while(rs_p.next())
            {
                current_row = rs_p.getInt("ID_PRZEDMIOTU");
            }
            current_row ++;

            rs_p.moveToInsertRow();
            rs_p.updateInt("ID_PRZEDMIOTU", current_row);
            rs_p.updateString("NAZWA", nazwa);
            rs_p.insertRow();
            stmt_p.close();
            rs_p.close();
            stmt_p = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String sql2 = "SELECT * FROM PRZEDMIOTY";
            rs_p = stmt_p.executeQuery(sql2);

            tfNazwaPrzedmiotu.setText("");
            bZapiszPrzedmiot.setEnabled(false);
            bAnulujPrzedmiot.setEnabled(false);
            tfNazwaPrzedmiotu.setEnabled(false);
            update();

        } catch (SQLException err) {System.out.println(err.getMessage());}
    }//GEN-LAST:event_bZapiszPrzedmiotActionPerformed

    private void bNowyPrzedmiotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNowyPrzedmiotActionPerformed
        // TODO add your handling code here:
        tfNazwaPrzedmiotu.setText("");
        bZapiszPrzedmiot.setEnabled(true);
        bAnulujPrzedmiot.setEnabled(true);
        tfNazwaPrzedmiotu.setEnabled(true);
    }//GEN-LAST:event_bNowyPrzedmiotActionPerformed

    private void cbPrzedmiotyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPrzedmiotyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbPrzedmiotyActionPerformed

    private void cbGodzinyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbGodzinyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbGodzinyActionPerformed

    private void tfSalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSalaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfSalaActionPerformed

    private void cbNauczycieleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNauczycieleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbNauczycieleActionPerformed

    private void bPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPrevActionPerformed
        try{
            if(rs_pl.previous()){
                /*int godz_od = rs_p.getInt("GODZINA_OD");
                String s_godz_od = Integer.toString(godz_od);
                int godz_do = rs_p.getInt("GODZINA_OD");
                String s_godz_do = Integer.toString(godz_do);*/

                String nazwa = rs_pl.getString("NAZWA");
                String typ = rs_pl.getString("TYP");
                String imie = rs_pl.getString("IMIE");
                String nazwisko = rs_pl.getString("NAZWISKO");
                String sala = rs_pl.getString("SALA");
                String dzien = rs_pl.getString("DZIEN");

                tfZajecia.setText(nazwa + "\n" + typ + "\n"
                    + imie + " " + nazwisko + "\n" + dzien + ", "
                    + sala + "\n"//s_godz_od + " - " + s_godz_do +"\n"
                );
                
                int i = Integer.parseInt(lZajecia1.getText())-1;
                lZajecia1.setText(Integer.toString(i));

            } else {
                rs_pl.next();
                JOptionPane.showMessageDialog(GUI.this, "To jest pierwszy przedmiot.");
            }
        } catch (SQLException err) {
            JOptionPane.showMessageDialog(GUI.this, err.getMessage());
        }
    }//GEN-LAST:event_bPrevActionPerformed

    private void bNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNextActionPerformed
        // TODO add your handling code here:
        try{
            if(rs_pl.next()){
                /*int godz_od = rs_p.getInt("GODZINA_OD");
                String s_godz_od = Integer.toString(godz_od);
                int godz_do = rs_p.getInt("GODZINA_OD");
                String s_godz_do = Integer.toString(godz_do);*/

                String nazwa = rs_pl.getString("NAZWA");
                String typ = rs_pl.getString("TYP");
                String imie = rs_pl.getString("IMIE");
                String nazwisko = rs_pl.getString("NAZWISKO");
                String sala = rs_pl.getString("SALA");
                String dzien = rs_pl.getString("DZIEN");

                tfZajecia.setText(nazwa + "\n" + typ + "\n"
                    + imie + " " + nazwisko + "\n" + dzien + ", "
                    + sala + "\n"//s_godz_od + " - " + s_godz_do +"\n"
                );
                
                int i = Integer.parseInt(lZajecia1.getText())+1;
                lZajecia1.setText(Integer.toString(i));

            } else {
                rs_pl.previous();
                JOptionPane.showMessageDialog(GUI.this, "To jest ostatni przedmiot.");
            }
        } catch (SQLException err) {
            JOptionPane.showMessageDialog(GUI.this, err.getMessage());
        }
    }//GEN-LAST:event_bNextActionPerformed

    private void Zajecia_set_buttons(boolean b)
    {
        l1.setEnabled(b);
        l2.setEnabled(b);
        l3.setEnabled(b);
        l4.setEnabled(b);
        l5.setEnabled(b);
        l6.setEnabled(b);
        l7.setEnabled(b);
        
        bZapiszZajecia.setEnabled(b);
        bAnulujZajecia.setEnabled(b);
        cbPrzedmioty2.setEnabled(b);
        cbNauczyciele.setEnabled(b);
        cbTyp.setEnabled(b);
        cbGodziny.setEnabled(b);
        dzien_plan1.setEnabled(b);
        tfSala.setEnabled(b);
        cbSemestry.setEnabled(b);

    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
            //</editor-fold>
            
        //</editor-fold>
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new GUI().setVisible(true);
            }  
        }); 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Anuluj_N;
    private javax.swing.JRadioButton BoxNie;
    private javax.swing.JRadioButton BoxTak;
    private javax.swing.JButton Delete;
    private javax.swing.JButton First_dyz;
    private javax.swing.JButton Last_dyz;
    private javax.swing.JButton Next_dyz;
    private javax.swing.JButton Previous_dyz;
    private javax.swing.JButton Zapisz_N;
    private javax.swing.JButton Zapisz_sem;
    private javax.swing.JButton aktualizuj_dyz;
    private javax.swing.JButton anuluj_wyd;
    private javax.swing.JButton bAnulujPrzedmiot;
    private javax.swing.JButton bAnulujZajecia;
    private javax.swing.JButton bDodajZajecia;
    private javax.swing.JButton bNext;
    private javax.swing.JButton bNowyPrzedmiot;
    private javax.swing.JButton bPrev;
    private javax.swing.JButton bZapiszPrzedmiot;
    private javax.swing.JButton bZapiszZajecia;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox cbGodziny;
    private javax.swing.JComboBox cbNauczyciele;
    private javax.swing.JComboBox cbPrzedmioty;
    private javax.swing.JComboBox cbPrzedmioty2;
    private javax.swing.JComboBox cbSemestry;
    private javax.swing.JComboBox cbTyp;
    private javax.swing.JButton dodaj_wyd;
    private javax.swing.JComboBox dzien_dyz;
    private javax.swing.JComboBox dzien_plan1;
    private javax.swing.JComboBox dzien_wyd;
    private javax.swing.JTabbedPane fMain;
    private javax.swing.JInternalFrame fNauczyciele;
    private javax.swing.JInternalFrame fPlan;
    private javax.swing.JInternalFrame fPrzedmioty;
    private javax.swing.JInternalFrame fSemstr;
    private javax.swing.JInternalFrame fStart;
    private javax.swing.JInternalFrame fTest;
    private javax.swing.JInternalFrame fWydarzenia;
    private javax.swing.JComboBox godziny_dyz_do_h;
    private javax.swing.JComboBox godziny_dyz_do_m;
    private javax.swing.JComboBox godziny_dyz_od_h;
    private javax.swing.JComboBox godziny_dyz_od_m;
    private javax.swing.JComboBox godziny_wyd;
    private javax.swing.JTextField imie;
    private javax.swing.JTextField inny_typ;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel l1;
    private javax.swing.JLabel l2;
    private javax.swing.JLabel l3;
    private javax.swing.JLabel l4;
    private javax.swing.JLabel l5;
    private javax.swing.JLabel l6;
    private javax.swing.JLabel l7;
    private javax.swing.JLabel lZajecia1;
    private javax.swing.JLabel lZajecia2;
    private javax.swing.JTextField lista_dyz;
    private javax.swing.JComboBox lista_n;
    private javax.swing.JTextField lista_wyd;
    private javax.swing.JTextField miejsce_wydarzenia;
    private javax.swing.JComboBox miesiac_wyd;
    private javax.swing.JComboBox minuty_wyd;
    private javax.swing.JToggleButton nast_wyd;
    private javax.swing.JTextField nazwisko;
    private javax.swing.JButton ost_wyd;
    private javax.swing.JButton pier_wyd;
    private javax.swing.JToggleButton pop_wyd;
    private javax.swing.JComboBox rok_s1;
    private javax.swing.JComboBox rok_s2;
    private javax.swing.JComboBox rok_wyd;
    private javax.swing.JScrollPane sPlan0;
    private javax.swing.JScrollPane sPlan1;
    private javax.swing.JScrollPane sPlan2;
    private javax.swing.JScrollPane sPlan3;
    private javax.swing.JScrollPane sPlan4;
    private javax.swing.JScrollPane sPlan5;
    private javax.swing.JTextField sala;
    private javax.swing.JComboBox semestr;
    private javax.swing.JTable tGodz;
    private javax.swing.JTable tPlan;
    private javax.swing.JTextField tfNazwaPrzedmiotu;
    private javax.swing.JTextField tfSala;
    private javax.swing.JTextArea tfZajecia;
    private javax.swing.JComboBox typ_wydarzen;
    private javax.swing.JButton usun_wyd;
    private javax.swing.JButton zapisz_wyd;
    private javax.swing.JButton zmien_wyd;
    // End of variables declaration//GEN-END:variables
}


